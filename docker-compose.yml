services:

  database:
    image: postgres:latest
    container_name: bigbrotr_database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ${POSTGRES_DB_DATA_PATH}:/var/lib/postgresql/data
      - ${POSTGRES_DB_INIT_PATH}:/docker-entrypoint-initdb.d/init.sql
      - ${POSTGRES_CONFIG_PATH}:/etc/postgresql.conf
    command: -c config_file=/etc/postgresql.conf
    networks:
      - network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: bigbrotr_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - network
    depends_on:
      - database
    restart: unless-stopped

  torproxy:
    image: dperson/torproxy
    container_name: bigbrotr_torproxy
    restart: unless-stopped
    networks:
      - network

  initializer:
    build:
      context: .
      dockerfile: dockerfiles/initializer
    container_name: bigbrotr_initializer
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - SEED_RELAYS_PATH=seed_relays.txt
    volumes:
      - ${SEED_RELAYS_PATH}:/app/seed_relays.txt
    depends_on:
      - database
    networks:
      - network
    restart: no

  finder:
    build:
      context: .
      dockerfile: dockerfiles/finder
    container_name: bigbrotr_finder
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - FINDER_FREQUENCY_HOUR=${FINDER_FREQUENCY_HOUR}
      - FINDER_REQUEST_TIMEOUT=${FINDER_REQUEST_TIMEOUT}
    depends_on:
      - database
    networks:
      - network
    restart: unless-stopped

  monitor:
    build:
      context: .
      dockerfile: dockerfiles/monitor
    container_name: bigbrotr_monitor
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - TORPROXY_HOST=torproxy
      - TORPROXY_PORT=9050
      - MONITOR_FREQUENCY_HOUR=${MONITOR_FREQUENCY_HOUR}
      - MONITOR_NUM_CORES=${MONITOR_NUM_CORES}
      - MONITOR_CHUNK_SIZE=${MONITOR_CHUNK_SIZE}
      - MONITOR_REQUESTS_PER_CORE=${MONITOR_REQUESTS_PER_CORE}
      - MONITOR_REQUEST_TIMEOUT=${MONITOR_REQUEST_TIMEOUT}
      - SECRET_KEY=${SECRET_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}
    depends_on:
      - database
      - torproxy
    networks:
      - network
    restart: unless-stopped

  syncronizer:
    build:
      context: .
      dockerfile: dockerfiles/syncronizer
    container_name: bigbrotr_syncronizer
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - TORPROXY_HOST=torproxy
      - TORPROXY_PORT=9050
      - SYNCRONIZER_NUM_CORES=${SYNCRONIZER_NUM_CORES}
      - SYNCRONIZER_CHUNK_SIZE=${SYNCRONIZER_CHUNK_SIZE}
      - SYNCRONIZER_REQUESTS_PER_CORE=${SYNCRONIZER_REQUESTS_PER_CORE}
      - SYNCRONIZER_REQUEST_TIMEOUT=${SYNCRONIZER_REQUEST_TIMEOUT}
      - SYNCTONIZER_START_TIMESTAMP=${SYNCTONIZER_START_TIMESTAMP}
      - SYNCRONIZER_STOP_TIMESTAMP=${SYNCRONIZER_STOP_TIMESTAMP}
      - SYNCRONIZER_EVENT_FILTER=${SYNCRONIZER_EVENT_FILTER}
    depends_on:
      - database
      - torproxy
    networks:
      - network
    restart: unless-stopped

networks:
  network:
    driver: bridge